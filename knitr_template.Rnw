\documentclass{article}
\usepackage{graphicx}

\title{Statistical Programming with R \\ Assignment 1 \\ (\texttt{knitr} Example Report)}
\author{Ville och Valle}
\date{\today}
\begin{document}
\maketitle

<<include=FALSE>>=
library(tidyverse)
library(devtools)
library(scales)
library(xtable)
@

\section{Problem 3}
In this task we were given three data files We were asked to join the three data files, clean it and then do some analysis of the data.
\subsection{Data preparation}

<<include=FALSE>>=
crime_data <- read_tsv("crime_data.tsv")
dictionary_county_facts <- read_csv("county_facts_dictionary.csv")
county_facts <- read_csv("county_facts.csv")
results <- read_csv("general_result.csv")
@

After loading the data to R we wanted to merge the data into one data set. Each row is supposed to contain observations of a specific county, coded by the so called fips-code. First of all, we had to remove some rows in the county facts file since they where summaries for each state and the whole US. After that, we started off by joining the result file and the county facts file.

<<include=FALSE>>=
# Arranging the data by the smallest value of fips first.
results <- results %>%
  arrange(combined_fips) 

# Changing column name
colnames(results)[2] <- "fips" 

# Removing rows with state summaries
county_facts <- na.omit(county_facts, cols = "state_abbreviation") 

# Changing column name so they are the same in both files
colnames(county_facts)[1] <- "fips" 

# Column needs to be of same class to join together
county_facts$fips <- as.character(county_facts$fips) 
results$fips <- as.character(results$fips)

# Joining county_facts och results
results_county <- full_join(county_facts, results) 
@

In the crime file the fips-code was separated into two columns, one with the state-code and one with the county-code. This caused some problems. To get the correct fips-code, we had to add one or two zeros between the state- and county-code. For a county with county-code 1 and state-code 1, we wanted the fips-code to be 1001. We solved this with a for loop based on logical arguments. After uniting the two columns into one fips-code column, we could join the crime data file with the rest of the data. 

<<include=FALSE>>=
for (i in 1:nrow(crime_data)) {
  # If the county-code is les than 10, the state-code is multiplied by 100
  if(crime_data[i, 6] < 10){ 
    crime_data[i, 5] <- crime_data[i, 5]*100
  }else{
    # If the county-code is les than 10 but less than 100, the state-code is multiplied by 10
    if(crime_data[i, 6] < 100 & crime_data[i, 6] > 9){ 
      crime_data[i, 5] <- crime_data[i, 5]*10
    }
  }
}

# Uniting the state- and county-code into one fips-code
crime_data <- unite(crime_data, FIPS_ST, FIPS_CTY, col = "fips", sep = "") 

# Joining results_county och crime_Data
sammanslaget <- full_join(results_county, crime_data)

# Moving columns of interest to the beginning of the file
sammanslaget <- sammanslaget %>%
  select(fips, per_gop_2016, total_votes_2016, everything()) 

@

Since we were interested in the republican partys result, we removed the rows were we had missing values on the variable percents of the vote for the republican party in 2016. After removing the rows, we ended up with a file with 3112 observations of 94 variables.

<<>>=
# Removing rows with missing values on republican result
sammanslaget <- na.omit(sammanslaget, cols = "per_gop_2016") 
@

We also created a new variable, gop win, which is 1 if the republicans got more votes than the democrats and 0 if smaller.

<<>>=
# Adding a new column to the file, "gop_winW
sammanslaget <- sammanslaget %>% 
  mutate(gop_win = per_gop_2016 - per_dem_2016) %>%
  select(gop_win, everything())

# If gap_win is bigger than 0, gap_win is coded as 1 
# If gap_win is smaller than 0, gap_win is coded as 0
for (i in 1:nrow(sammanslaget)) {
  if(sammanslaget[i, 1] > 0){ 
    sammanslaget[i, 1] <- 1
  }else{
    sammanslaget[i, 1] <- 0
  }
}
@

\subsection{Data analysis}

We were now asked to explore the data by visualizing it and compute some summary statistics. 

<<scatter1, fig.width = 6, fig.asp = 0.62, fig.align = "center", fig.align = "center", fig.cap = "Scatterplot of republican election result and median income in that county", echo=FALSE>>=
ggplot(data = sammanslaget, 
       mapping = aes(x = INC110213, y = per_gop_2016,
      color = HSD310213)) +
  geom_point(size = 2) +
  geom_smooth(method = lm, se = TRUE, color = "blue",
              size = 1.5) +
  scale_y_continuous(breaks = c(0, 0.20, 0.40, 0.60, 
                                0.80), 
                     labels = c("0%", "20%", "40%", 
                                "60%", "80%")) +
  scale_x_continuous(breaks = c(25000, 50000, 75000, 
                                100000, 125000), 
                     labels = c("$25000", "$50000", 
                                "$75000", "$100000", 
                                "$125000")) +
  labs(title = "2016 US presidential election, county-level",
       subtitle = "Final result for the republican party explained by the median income",
       x = "Median household income, 2009-2013",
       y = "Final result for the Republican party")

@
Figure \ref{fig:scatter1} shows the final result for the republican party explained by the median income. The best fit line shows that there is a negative relation between household income and support for the republican party.



<<histogram1, fig.width = 6, fig.asp = 0.62, fig.align = "center", fig.cap = "Histogram of republican elecetion result in 2016 and 2012", echo=FALSE>>=
ggplot(data = sammanslaget) + 
  geom_histogram(mapping = aes(x = per_gop_2016), 
                 fill = "red", alpha = 1) +
  geom_histogram(mapping = aes(x = per_gop_2012), 
                 fill = "blue", alpha = 0.5) +
  scale_x_continuous(breaks = c(0, 0.20, 0.40, 0.60, 
                                0.80), 
                     labels = c("0%", "20%", "40%", 
                                "60%", "80%")) +
  annotate(geom="text", x=0.93, y=287, label="2016", 
           color="red", size = 5) +
  annotate(geom="text", x=0.93, y=267, label="2012", 
           color="blue", alpha = 0.5, size = 5) +
  labs(
    title = "2016 and 2012 US presidential election, county-level",
       subtitle = "Histogram of the Republican partyÂ´s final result in 2016 and 2012",
       x = "Votes in percent",
       y = "Number of counties")

@

Figure \ref{fig:histogram1} shows the election result for the republican party in 2016 and 2012. We can see that the republican party did a better election in 2016 since there are more counties with higher results.

Figure \ref{fig:boxplot1} shows two boxplots, one for the level of education in counties won by the democrats and one for the level of education in counties won by the republicans. We can see that the level of education tend to be higher in counties won by the democrats.
<<boxplot1, fig.width = 6, fig.asp = 0.62, fig.align = "center", fig.cap = "Boxplot of the level of education in counties won by each party.", echo=FALSE>>=
ggplot(sammanslaget, aes(x = gop_win, y = EDU685213)) +
  geom_boxplot() +
  scale_y_continuous(breaks = c(0, 20, 40, 60, 80), 
                     labels = c("0%", "20%", "40%", "60%", "80%")) +
  scale_x_discrete(breaks = c(0, 1), labels = c("Democrats", "Republicans")) +
  labs(title = "2016 US presidential election",
       subtitle = "Boxplot of the educational level",
       x = "Winning party",
       y = "Bachelor's degree or higher, percent of persons age 25+, 2009-2013")
@


Figure \ref{fig:densityplot} shows the distribution of the share of elderly people in counties won by each party. We can see that the democrats generally won in counties where elderly people had a bigger share of the total population.
<<densityplot, fig.asp = 0.62, fig.align = "center", fig.cap = "The graph shows the distribution of the share of elderly people in counties won by each party", echo=FALSE>>=
ggplot(sammanslaget, aes(x = AGE775214, 
                                    fill = gop_win,
                                    color = gop_win)) + 
  geom_density() +
  facet_wrap(~gop_win, nrow = 2) +
  labs(title = "Elderly votes in the 2016 Presidiential Election",
       subtitle = "Density plot",
       x = " Persons aged 65 or over, %",
       y = "Density",
       fill = "Carried by") +
  guides(color = FALSE) + # Removing legend for "color"
  scale_fill_manual(labels = c("GOP", "Dems"), # Labelling "fill" legends
                    values = c("red", "blue")) + # Using party colours for fill
  scale_color_manual(values = c("red", "blue")) + # Using party colour for borders
  theme(strip.background = element_blank(), # Removing facet_wrap labels
        strip.text.x = element_blank())
@



<<table1, results = "asis", echo = FALSE>>=
xtable(t(as.matrix(summary(sammanslaget$INC910213))), caption = "Summary of the variable per capita income, dollars.")
@
Table \ref{tab:table1} shows a summary of the variable per capita money income in past 12 months (2013 dollars), 2009-2013. 

<<table2, results = "asis", echo = FALSE>>=
xtable(t(as.matrix(summary(sammanslaget$MURDER))), caption = "Summary of the variable murder.")
@
Table \ref{tab:table2} shows a summary of the variable counts of arrests and offenses for the crime murder. We can see that most of the counties were free from murders.

<<table3, results = "asis", echo = FALSE>>=
xtable(t(as.matrix(summary(sammanslaget$PST045214))), caption = "Summary of the variable population.")
@
Table \ref{tab:table3} shows a summary of the variable population, 2014 estimate. We can see that more than half of the counties has a population of less than 26000. However, the mean is driven up by a few very big counties.


\end{document}
